name: Deploy OVH

on:
  workflow_dispatch:

jobs:
  deploy-network:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Checkout du dépôt
      - name: Checkout repository
        uses: actions/checkout@v2

      # Étape 2 : Installer Helm (si nécessaire)
      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      # Étape 3 : Installer Scaleway CLI
      - name: Install Scaleway CLI
        run: |
          curl -s https://raw.githubusercontent.com/scaleway/scaleway-cli/master/scripts/get.sh | sh
          scw version

      # Étape 4 : Installer cURL
      - name: Install cURL
        run: sudo apt-get install curl
  
      # Étape 5 : Définir les variables d'environnement pour l'API OVH
      - name: Set environment variables for OVH API
        env:
          OVH_API_KEY: ${{ secrets.OVH_API_KEY }}
          OVH_CONSUMER_KEY: ${{ secrets.OVH_CONSUMER_KEY }}
        run: |
          echo "OVH_API_KEY=$OVH_API_KEY"
          echo "OVH_CONSUMER_KEY=$OVH_CONSUMER_KEY"

      # Étape 6 : Configurer Scaleway CLI
      - name: Configure Scaleway CLI
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
          SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_ORGANIZATION_ID }}
          SCW_DEFAULT_REGION: fr-par
          SCW_DEFAULT_ZONE: fr-par-1
        run: |
          mkdir -p ~/.config/scw
          touch ~/.config/scw/config.yaml
          scw config set access-key="${SCW_ACCESS_KEY}"
          scw config set secret-key="${SCW_SECRET_KEY}"
          scw config set default-organization-id="${SCW_DEFAULT_ORGANIZATION_ID}"
          scw config set default-project-id="${SCW_DEFAULT_PROJECT_ID}"
          scw config set default-region="${SCW_DEFAULT_REGION}"
          scw config set default-zone="${SCW_DEFAULT_ZONE}"

      # Étape 7 : Récupérer l'IP du Load Balancer
      - name: Get Load Balancer IP
        id: get-lb-ip
        run: |
          lb_data=$(scw lb ip list --output json)
          echo "Debugging Load Balancer Data: $lb_data"
          if [[ -z "$lb_data" || "$lb_data" == "null" ]]; then
            echo "Error: No Load Balancer IPs found."
            exit 1
          fi
          lb_ip=$(echo "$lb_data" | jq -r '.[0].ip_address')
          if [[ -z "$lb_ip" || "$lb_ip" == "null" ]]; then
            echo "Error: Load Balancer IP not found."
            exit 1
          fi
          echo "Load Balancer IP: $lb_ip"
          echo "LOAD_BALANCER_IP=$lb_ip" >> $GITHUB_ENV

      # Étape 8 : Supprimer les anciens enregistrements DNS
      - name: Delete old DNS records
        run: |
          RECORDS=$(curl -X GET "https://eu.api.ovh.com/v1/domain/zone/my-soc.fr/record?fieldType=A" \
            -H "authorization: Bearer ${{ secrets.OVH_CONSUMER_KEY }}" \
            -H "accept: application/json")
          RECORD_IDS=$(echo $RECORDS | jq -r '.[].id')
          if [[ -z "$RECORD_IDS" || "$RECORD_IDS" == "null" ]]; then
            echo "No DNS records to delete."
          else
            for RECORD_ID in $RECORD_IDS; do
              curl -X DELETE "https://eu.api.ovh.com/v1/domain/zone/my-soc.fr/record/$RECORD_ID" \
                -H "authorization: Bearer ${{ secrets.OVH_CONSUMER_KEY }}"
            done
          fi

      # Étape 9 : Créer de nouveaux enregistrements DNS
      - name: Create new DNS records
        run: |
          SUBDOMAINS=("prometheus" "iris" "kibana" "doctobobo")
          for SUBDOMAIN in "${SUBDOMAINS[@]}"; do
            curl -X POST "https://eu.api.ovh.com/v1/domain/zone/my-soc.fr/record" \
              -H "Content-Type: application/json" \
              -H "authorization: Bearer ${{ secrets.OVH_CONSUMER_KEY }}" \
              -d '{
                "fieldType": "A",
                "subDomain": "'"$SUBDOMAIN"'",
                "target": "'"$LOAD_BALANCER_IP"'",
                "ttl": 3600
              }'
          done

      # Étape 10 : Rafraîchir la zone DNS
      - name: Refresh DNS zone
        run: |
          curl -X POST "https://eu.api.ovh.com/v1/domain/zone/my-soc.fr/refresh" \
            -H "authorization: Bearer ${{ secrets.OVH_CONSUMER_KEY }}"
