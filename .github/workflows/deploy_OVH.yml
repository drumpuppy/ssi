name: Deploy OVH

on:
  workflow_dispatch:

jobs:
  deploy-network:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install required tools
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          curl -s https://raw.githubusercontent.com/scaleway/scaleway-cli/master/scripts/get.sh | sh
          sudo apt-get install curl jq

      - name: Set environment variables for OVH API
        env:
          OVH_API_KEY: ${{ secrets.OVH_API_KEY }}
          OVH_CONSUMER_KEY: ${{ secrets.OVH_CONSUMER_KEY }}
          OVH_APP_SECRET: ${{ secrets.OVH_APP_SECRET }}
        run: |
          echo "OVH_API_KEY=$OVH_API_KEY"
          echo "OVH_CONSUMER_KEY=$OVH_CONSUMER_KEY"
          echo "OVH_APP_SECRET=$OVH_APP_SECRET"

      - name: Configure Scaleway CLI
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
        run: |
          mkdir -p ~/.config/scw
          touch ~/.config/scw/config.yaml
          scw config set access-key="${SCW_ACCESS_KEY}"
          scw config set secret-key="${SCW_SECRET_KEY}"
          scw config set default-project-id="${SCW_DEFAULT_PROJECT_ID}"

      # Étape 6 : Configurer Scaleway CLI (en ajoutant l'ID d'organisation si nécessaire)
      - name: Configure Scaleway CLI
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
          SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_ORGANIZATION_ID }}
          SCW_DEFAULT_REGION: fr-par
          SCW_DEFAULT_ZONE: fr-par-1
        run: |
          mkdir -p ~/.config/scw
          touch ~/.config/scw/config.yaml
          scw config set access-key="${SCW_ACCESS_KEY}"
          scw config set secret-key="${SCW_SECRET_KEY}"
          scw config set default-organization-id="${SCW_DEFAULT_ORGANIZATION_ID}"
          scw config set default-project-id="${SCW_DEFAULT_PROJECT_ID}"
          scw config set default-region="${SCW_DEFAULT_REGION}"
          scw config set default-zone="${SCW_DEFAULT_ZONE}"


      - name: Get DNS A records from OVH
        id: get-ovh-records
        run: |
          # Variables nécessaires
          OVH_API_KEY=${{ secrets.OVH_APP_KEY }}
          OVH_CONSUMER_KEY=${{ secrets.OVH_CONSUMER_KEY }}
          OVH_APP_SECRET=${{ secrets.OVH_APP_SECRET }}
          TIMESTAMP=$(date +%s)
          
          # Calcul de la signature
          SIGNATURE=$(echo -n "$OVH_API_KEY+$OVH_CONSUMER_KEY+$OVH_APP_SECRET+$TIMESTAMP" | openssl dgst -sha1 -binary | xxd -p)
      
          # Vérification des clés API
          echo "OVH_API_KEY: $OVH_API_KEY"
          echo "OVH_CONSUMER_KEY: $OVH_CONSUMER_KEY"
          echo "OVH_APP_SECRET: $OVH_APP_SECRET"
      
          # Effectuer la requête vers l'API OVH pour obtenir les enregistrements DNS de type A
          RECORDS=$(curl -X GET "https://eu.api.ovh.com/v1/domain/zone/my-soc.fr/record?fieldType=A" \
            -H "X-Ovh-Application: $OVH_API_KEY" \
            -H "X-Ovh-Consumer: $OVH_CONSUMER_KEY" \
            -H "X-Ovh-Signature: $SIGNATURE" \
            -H "X-Ovh-Timestamp: $TIMESTAMP")
      
          if [[ "$RECORDS" == *"Client::Unauthorized"* ]]; then
            echo "ERROR: Unauthorized access to OVH API. Please check your OVH API keys."
            exit 1
          fi
      
          echo "OVH DNS Records: $RECORDS"
          
          # Extraire les IDs des enregistrements DNS de type A
          RECORD_IDS=$(echo $RECORDS | jq -r '.[].id')
          
          if [[ -z "$RECORD_IDS" || "$RECORD_IDS" == "null" ]]; then
            echo "No DNS records found to update."
            exit 1
          fi
          
          echo "Record IDs to update: $RECORD_IDS"
          echo "RECORD_IDS=$RECORD_IDS" >> $GITHUB_ENV
      
      - name: Update DNS records in OVH
        run: |
          for RECORD_ID in ${{ env.RECORD_IDS }}; do
            echo "Updating record $RECORD_ID with IP ${LB_IP}"
            curl -X PUT "https://eu.api.ovh.com/v1/domain/zone/my-soc.fr/record/$RECORD_ID" \
              -H "X-Ovh-Application: ${{ secrets.OVH_APP_KEY }}" \
              -H "X-Ovh-Consumer: ${{ secrets.OVH_CONSUMER_KEY }}" \
              -H "X-Ovh-Signature: $SIGNATURE" \
              -H "X-Ovh-Timestamp: $TIMESTAMP" \
              -H "Content-Type: application/json" \
              -d '{
                    "fieldType": "A",
                    "target": "'${LB_IP}'",
                    "subDomain": "www",
                    "ttl": 3600
                  }'
          done
