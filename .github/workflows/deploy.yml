name: Deploy Kubernetes Cluster on Scaleway

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_hostname: app.terraform.io
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}
          terraform_version: latest

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Install Scaleway CLI
        run: |
          curl -s https://raw.githubusercontent.com/scaleway/scaleway-cli/master/scripts/get.sh | sh
          scw version

      # Initialize Scaleway CLI with credentials
      - name: Configure Scaleway CLI
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
          SCW_DEFAULT_REGION: fr-par
          SCW_DEFAULT_ZONE: fr-par-1
        run: |
          echo "Scaleway CLI configured with environment variables."

      # Generate kubeconfig file with Scaleway CLI
      - name: Configure kubeconfig
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_PROJECT_ID }}
        run: |
          mkdir -p ~/.kube
          cluster_id=$(scw k8s cluster list name=k8s-cluster --output json | jq -r '.[0].id')
          if [ -n "$cluster_id" ]; then
            scw k8s kubeconfig get $cluster_id > ~/.kube/config
          else
            echo "Kubernetes cluster ID not found."
            exit 1
          fi

      - name: Terraform Init
        working-directory: ./infra
        env:
          TF_VAR_scw_access_key: ${{ secrets.SCW_ACCESS_KEY }}
          TF_VAR_scw_secret_key: ${{ secrets.SCW_SECRET_KEY }}
          TF_VAR_scw_project_id: ${{ secrets.SCW_PROJECT_ID }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infra
        env:
          TF_VAR_scw_access_key: ${{ secrets.SCW_ACCESS_KEY }}
          TF_VAR_scw_secret_key: ${{ secrets.SCW_SECRET_KEY }}
          TF_VAR_scw_project_id: ${{ secrets.SCW_PROJECT_ID }}
        run: terraform apply -auto-approve
