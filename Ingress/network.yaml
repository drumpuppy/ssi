apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-soc-ingress-2
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  rules:
    # - host: prometheus2.my-soc.fr
    #   http:
    #     paths:
    #       - path: /
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: prometheus-server
    #             port:
    #               number: 80
    # - host: iris2.my-soc.fr
    #   http:
    #     paths:
    #       - path: /
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: iriswebapp-app
    #             port:
    #               number: 8000
    - host: kibana2.my-soc.fr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kibana-kibana
                port:
                  number: 5601
        
  tls:
    - hosts:
        # - prometheus2.my-soc.fr
        # - iris2.my-soc.fr
        - kibana2.my-soc.fr
      secretName: ingress-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-soc-ingress-doctobobo-2
  namespace: doctobobo
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  rules:
    - host: doctobobo2.my-soc.fr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
  tls:
    - hosts:
        - doctobobo2.my-soc.fr
      secretName: ingress-tls-2
